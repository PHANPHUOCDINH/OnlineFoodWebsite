@model IEnumerable<OnlineFoodWebsite.Model.HOADON>

@{
    ViewBag.Title = "Index";
}
@if (ViewBag.Message3 != null)
{
    <script>
    var text='@ViewBag.Message3';
    window.alert(text);
    </script>
}

<h2>Danh sách đơn hàng</h2>

Nhập ngày lập
<input type="text" id="myInput" onkeyup="myFunction()" placeholder="22/06/2021" title="Type in a name">
<br />
<br />
Nhập mã khách hàng
<input type="text" id="myInput1" onkeyup="myFunction1()" placeholder="162478031142" title="Type in a name">
<br />
<table class="table" id="myTable">
    <tr>
        <th>STT</th>
        <th>Mã đơn hàng</th>
        <th>
            Mã khách hàng
        </th>
        <th>
            Ngày lập
        </th>

        <th>
            Ghi chú
        </th>
        <th onclick="sortTable(5)">
            Trạng thái
        </th>
        <th>
            Nhân viên phụ trách
        </th>
        <th></th>
    </tr>

    @{
        int i = 0;
        foreach (var item in Model)
        {
            i++;
            <tr>
                <td>@i</td>
                <td>
                    @Html.DisplayFor(modelItem => item.MAHD)

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MAKH)

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NGAYLAP)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.GHICHU)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TRANGTHAI)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NVPHUTRACH)
                </td>
                <td>
                    @Html.ActionLink("Cập nhật", "Edit", new { id = item.MAHD }) |
                    @Html.ActionLink("Chi tiết", "Details", new { id = item.MAHD })
                </td>
            </tr>
        }
    }
</table>
<script>
    function myFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[3];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
<script>
    function myFunction1() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput1");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[2];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("myTable");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc";
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /*check if the two rows should switch place,
                based on the direction, asc or desc:*/
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                //Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /*If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again.*/
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>